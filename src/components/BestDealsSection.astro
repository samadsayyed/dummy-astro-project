---
import ProductCard from "./ProductCard.astro";

interface TopSellingProduct {
  id: number;
  name: string;
  sku: string;
  slug: string;
  price: number;
  discount_price: number;
  in_stock: boolean;
  stock_quantity: number;
  category_name: string;
  gallery: string[];
  has_variants: boolean;
  category_slug: string;
  total_sold: number;
}

interface Product {
  id: number;
  name: string;
  slug: string;
  price: string;
  discount_price?: string;
  gallery?: string[];
  in_stock: boolean;
  stock_quantity: number;
  attributes?: Record<string, string>;
}

let products: Product[] = [];

try {
  const response = await fetch("https://admin.bablon.in/api/products/top-selling");
  const topSellingProducts: TopSellingProduct[] = await response.json();

  // Convert the API response to match ProductCard expectations
  products = topSellingProducts.slice(0, 4).map((product: TopSellingProduct) => ({
    id: product.id,
    name: product.name,
    slug: product.slug,
    price: product.price.toString(),
    discount_price: product.discount_price.toString(),
    gallery: product.gallery,
    in_stock: product.in_stock,
    stock_quantity: product.stock_quantity,
    attributes: {} // Add empty attributes object as ProductCard expects it
  }));
} catch (error) {
  console.error("Error fetching top-selling products:", error);
}
---

<section class="py-16 bg-gradient-to-br from-gray-50 to-white" data-aos="fade-up">
  <div class="max-w-7xl mx-auto px-4">
    <!-- Header Section -->
    <div class="text-center mb-12" data-aos="fade-up" data-aos-delay="200">
      
      
      <h2 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4" data-aos="fade-up" data-aos-delay="400">
        <span class="block">Top Selling</span>
        <span class="block text-gray-600">Furniture</span>
      </h2>

      <p class="text-lg text-gray-600 max-w-2xl mx-auto leading-relaxed" data-aos="fade-up" data-aos-delay="500">
        Discover our most popular pieces. These customer favorites combine style, quality, and timeless design that our community loves.
      </p>
    </div>

    <!-- Products Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-12" data-aos="fade-up" data-aos-delay="600">
      {
        products.map((product: Product, index: number) => {
          if (!product) return null;
          return <div data-aos="zoom-in" data-aos-delay={700 + (index * 100)}><ProductCard product={product} /></div>;
        })
      }
    </div>

    <!-- CTA Section -->
    <div class="text-center" data-aos="fade-up" data-aos-delay="1100">
      <a 
        href="/shop" 
        class="group inline-flex items-center px-8 py-4 bg-black text-white font-medium tracking-wider text-sm uppercase hover:bg-gray-800 transition-all duration-300 border-2 border-black hover:border-gray-800"
      >
        <span>Explore Top Sellers</span>
        <svg class="w-4 h-4 ml-3 group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
        </svg>
      </a>
    </div>
  </div>
</section>

<style>
  /* Smooth transitions */
  * {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  
  /* Custom focus styles */
  a:focus {
    outline: 2px solid black;
    outline-offset: 2px;
  }
  
  /* Text selection */
  ::selection {
    background: rgba(0, 0, 0, 0.1);
    color: black;
  }
</style> 