---
let products = [];

try {
  const response = await fetch('https://admin.bablon.in/api/products?limit=7');
  const allProducts = await response.json();
  products = allProducts.slice(0, 7); // Limit to 7
} catch (error) {
  console.error('Error fetching products:', error);
}

// Helper function for price formatting
const formatPrice = (price) => {
  return `₹${parseFloat(price).toLocaleString()}`;
};

// Helper to get first variant or fallback to product itself
const getFirstVariant = (product) => {
  if (product.variants && product.variants.length > 0) {
    return product.variants[0];
  }
  return {
    ...product,
    images: product.gallery || [],
    attributes: product.attributes || {},
  };
};

// Helper to get first image from variant or fallback image
const getFirstImage = (variant) => {
  return (variant.images && variant.images[0]) || 'https://placehold.co/400x400';
};
---


<div class="max-w-7xl mx-auto px-4 py-16 flex flex-col md:flex-row">
  <!-- Title Section -->
  
  <!-- Products Grid -->
  <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
    <div class="md:w-1/4 mb-8 md:mb-0 pr-0 md:pr-8">
      <h2 class="text-4xl font-bold mb-2">
        <span class="block">Best</span>
        <span class="block">Modern</span>
        <span class="block">Furniture</span>
      </h2>
      <a href="#" class="inline-block mt-4 text-sm font-medium">
        See All &gt;&gt;
      </a>
    </div>
    
    {products.map(product => {
      const variant = getFirstVariant(product);
      if (!variant) return null;
      
      return (
        <div class="relative bg-gray-100 flex flex-col group">
          <!-- Product Image -->
          <div class="relative overflow-hidden">
            <!-- Hot and Sale Tags -->
            {!variant.in_stock ? (
              <span class="bg-gray-600 text-white text-xs px-2 py-1">OUT OF STOCK</span>
            ) : (variant.discount_price && parseFloat(variant.discount_price) < parseFloat(variant.price)) && (
              <div class="absolute top-2 left-2 flex gap-1 z-10">
                <span class="bg-red-600 text-white text-xs px-2 py-1">SALE</span>
              </div>
            )}

            <img 
              src={getFirstImage(variant)} 
              alt={product.name} 
              class="w-full h-80 object-cover transition-transform duration-500 ease-in-out group-hover:scale-105"
            />

          <!-- Action Buttons that appear on hover -->
          <div class="absolute inset-0 flex flex-col items-center justify-center gap-2 transition-all duration-300 group-hover:bg-black/10">
            <!-- Quick View and Compare Icons -->
            <div class="absolute top-4 right-4 flex flex-col gap-2 transition-opacity duration-300 opacity-0 group-hover:opacity-100">
              <button class="bg-white p-2 rounded-full shadow hover:bg-gray-100 transition-all duration-300 transform hover:scale-110">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                </svg>
              </button>
              <button class="bg-white p-2 rounded-full shadow hover:bg-gray-100 transition-all duration-300 transform hover:scale-110">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4" />
                </svg>
              </button>
            </div>
            
            <!-- Add to Cart Button for all products -->
            <button 
              class="absolute w-full bottom-0 left-0 right-0 mx-auto py-2 text-center text-white font-medium transition-all duration-300 bg-black hover:bg-red-600 opacity-0 group-hover:opacity-100"
              data-product-id={product.id}
              data-variant-id={variant.id}
              onclick="addToCart(this)"
            >
              ADD TO CART
            </button>
          </div>

          <!-- Wishlist Heart Icon -->
          <button class="absolute bottom-12 right-4 bg-white p-2 rounded-full shadow transition-all duration-300 transform opacity-0 group-hover:opacity-100 hover:scale-110">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
            </svg>
          </button>
        </div>

        <!-- Product Info -->
        <div class="p-4">
          <h3 class="font-medium text-lg">{product.name}</h3>
          <div class="mt-2 flex items-center">
            {variant.discount_price && parseFloat(variant.discount_price) < parseFloat(variant.price) ? (
              <>
                <span class="font-bold">{formatPrice(variant.discount_price)}</span>
                <span class="line-through text-gray-500 ml-2">
                  {formatPrice(variant.price)}
                </span>
              </>
            ) : (
              <span class="font-bold">{formatPrice(variant.price)}</span>
            )}
          </div>
          
          {/* Show variant color if available */}
          {variant.attributes && variant.attributes.Color && (
            <div class="mt-1 text-sm text-gray-600">
              Color: {variant.attributes.Color}
            </div>
          )}
        </div>
      </div>
    );
    })}
  </div>
</div>

<script>
  // Client-side JavaScript for cart functionality
  function addToCart(button) {
    const productId = button.getAttribute('data-product-id');
    const variantId = button.getAttribute('data-variant-id');
    
    // Get product data from the DOM or make an API call
    // For now, we'll just show feedback
    const originalText = button.textContent;
    button.textContent = 'ADDED ✓';
    
    setTimeout(() => {
      button.textContent = originalText;
    }, 1500);
    
    // Here you would typically call your cart utility function
    // import { addToCart } from '../utils/cartUtils';
    // addToCart({ productId, variantId });
    
    console.log('Adding to cart:', { productId, variantId });
  }
</script> 