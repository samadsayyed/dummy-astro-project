---
// Custom Toast Component for the website theme
---

<div id="toast-container" class="fixed top-4 right-4 z-50 space-y-3 pointer-events-none"></div>

<script>
  class CustomToast {
    constructor() {
      this.container = document.getElementById('toast-container');
      if (!this.container) {
        this.container = document.createElement('div');
        this.container.id = 'toast-container';
        this.container.className = 'fixed top-4 right-4 z-50 space-y-3 pointer-events-none';
        document.body.appendChild(this.container);
      }
    }

         show(message, type = 'success', duration = 5000) {
       const toast = document.createElement('div');
       toast.className = `transform transition-all duration-300 ease-out translate-x-full opacity-0 pointer-events-auto`;
      
             toast.innerHTML = `
         <div class="max-w-sm w-full bg-white border-1 border-black shadow-2xl">
           <div class="flex items-start p-4">
             <div class="flex-shrink-0">
               ${type === 'success' ? `
                 <svg class="h-6 w-6 text-black" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                   <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                 </svg>
               ` : `
                 <svg class="h-6 w-6 text-black" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                   <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                 </svg>
               `}
             </div>
             <div class="ml-3 flex-1">
               <p class="text-sm font-medium text-black">${message}</p>
             </div>
             <div class="ml-4 flex-shrink-0 flex">
               <button class="inline-flex text-black hover:text-gray-600 focus:outline-none focus:text-gray-600 transition-colors">
                 <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                   <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                 </svg>
               </button>
             </div>
           </div>
           <div class="h-2 bg-black"></div>
         </div>
       `;

      // Add click handler for close button
      const closeBtn = toast.querySelector('button');
      closeBtn.addEventListener('click', () => this.hide(toast));

      this.container.appendChild(toast);

      // Animate in
      setTimeout(() => {
        toast.classList.remove('translate-x-full', 'opacity-0');
        toast.classList.add('translate-x-0', 'opacity-100');
      }, 10);

      // Auto hide after duration
      if (duration > 0) {
        setTimeout(() => this.hide(toast), duration);
      }

      return toast;
    }

    hide(toast) {
      toast.classList.add('translate-x-full', 'opacity-0');
      setTimeout(() => {
        if (toast.parentNode) {
          toast.parentNode.removeChild(toast);
        }
      }, 300);
    }

    success(message, duration = 5000) {
      return this.show(message, 'success', duration);
    }

    error(message, duration = 5000) {
      return this.show(message, 'error', duration);
    }
  }

  // Make toast available globally
  window.customToast = new CustomToast();
</script>
