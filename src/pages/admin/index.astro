---
import Layout from '../../layouts/Layout.astro';
import { getAllBlogs } from '../../utils/blogUtils';

// Get all blogs for the admin dashboard
const blogs = getAllBlogs();
---

<Layout title="Admin Dashboard - Bablon">
  <main class="max-w-7xl mx-auto px-4 py-12">
    <div class="flex justify-between items-center mb-8">
      <h1 class="text-3xl font-bold">Admin Dashboard</h1>
      <a href="/admin/blog-editor" class="px-4 py-2 bg-gray-800 text-white rounded-md hover:bg-gray-700 transition-colors">
        Add New Blog
      </a>
    </div>
    
    <div class="bg-white p-6 rounded-lg shadow-md mb-8">
      <h2 class="text-xl font-semibold mb-4">Blog Posts</h2>
      
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
          <thead class="bg-gray-50">
            <tr>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Title</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Category</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Author</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
            </tr>
          </thead>
          <tbody class="bg-white divide-y divide-gray-200">
            {blogs.map((blog) => (
              <tr>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{blog.id}</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">{blog.title}</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{blog.category}</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{blog.date}</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{blog.author}</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                  <div class="flex space-x-2">
                    <a href={`/blogs/${blog.id}`} class="text-gray-600 hover:text-gray-900">View</a>
                    <a href={`/admin/blog-editor?id=${blog.id}`} class="text-blue-600 hover:text-blue-900">Edit</a>
                    <button class="text-red-600 hover:text-red-900">Delete</button>
                  </div>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <div class="bg-white p-6 rounded-lg shadow-md">
        <h2 class="text-xl font-semibold mb-4">Quick Stats</h2>
        <div class="grid grid-cols-2 gap-4">
          <div class="bg-gray-50 p-4 rounded-md">
            <p class="text-sm text-gray-500">Total Blog Posts</p>
            <p class="text-2xl font-bold">{blogs.length}</p>
          </div>
          <div class="bg-gray-50 p-4 rounded-md">
            <p class="text-sm text-gray-500">Categories</p>
            <p class="text-2xl font-bold">{new Set(blogs.map(blog => blog.category.split(', ')).flat()).size}</p>
          </div>
          <div class="bg-gray-50 p-4 rounded-md">
            <p class="text-sm text-gray-500">Authors</p>
            <p class="text-2xl font-bold">{new Set(blogs.map(blog => blog.author)).size}</p>
          </div>
          <div class="bg-gray-50 p-4 rounded-md">
            <p class="text-sm text-gray-500">Latest Post</p>
            <p class="text-lg font-semibold truncate">{blogs[0]?.title || 'None'}</p>
          </div>
        </div>
      </div>
      
      <div class="bg-white p-6 rounded-lg shadow-md">
        <h2 class="text-xl font-semibold mb-4">Admin Actions</h2>
        <div class="space-y-4">
          <a href="/admin/blog-editor" class="block w-full px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded-md text-center transition-colors">
            Create New Blog Post
          </a>
          <a href="#" class="block w-full px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded-md text-center transition-colors">
            Manage Categories
          </a>
          <a href="#" class="block w-full px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded-md text-center transition-colors">
            Manage Authors
          </a>
          <a href="/blogs" class="block w-full px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded-md text-center transition-colors">
            View Blog Frontend
          </a>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Handle delete buttons
    document.querySelectorAll('button').forEach(button => {
      if (button.textContent === 'Delete') {
        button.addEventListener('click', () => {
          if (confirm('Are you sure you want to delete this blog post? This action cannot be undone.')) {
            // In a real implementation, this would send a delete request to a backend API
            alert('Blog post would be deleted in a real implementation.');
          }
        });
      }
    });
  });
</script>